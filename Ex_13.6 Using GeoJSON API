import urllib.request, urllib.parse, urllib.error
import json
import ssl

api_key = False
# If you have a Google Places API key, enter it here
# api_key = 'AIzaSy___IDByT70'
# https://developers.google.com/maps/documentation/geocoding/intro

if api_key is False:
    api_key = 42
    serviceurl = 'http://py4e-data.dr-chuck.net/json?'
else :
    serviceurl = 'https://maps.googleapis.com/maps/api/geocode/json?'

# Ignore SSL certificate errors
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

while True:
    address = input('Enter Location: ')
    if len(address)<1:
        break
    parms = dict()
    parms['address'] = address
    if api_key is not False:
        parms['key'] = api_key
    url = serviceurl +urllib.parse.urlencode(parms)

    print('Retrieving', url)
    uh = urllib.request.urlopen(url, context= ctx)
    data = uh.read().decode()
    print('Retrieved', len(data), 'characters')

    try:
        js = json.loads(data)
    except:
        js = None

    if not js or 'status' not in js or js['status'] != 'OK':
        print('==== Failure To Retrieve ====')
        print(data)
        continue

    print(json.dumps(js, indent = 4))

    location = js['results'][0]['place_id']
    print('place_id:', location)
    
    
#(OR)
#import urllib.request, urllib.parse, urllib.error
#from urllib.request import urlopen
#import ssl
#import json

# Ignore SSL certificate errors
#ctx = ssl.create_default_context()
#ctx.check_hostname = False
#ctx.verify_mode = ssl.CERT_NONE

#parameters for the url
#address = input('Enter Location: ')
#api_key = 42
#parms = dict()
#parms['address'] = address
#parms['key'] = api_key

#generating url and obtaining and reading data
#url = 'http://py4e-data.dr-chuck.net/json?'
#json_url = url + urllib.parse.urlencode(parms)
#print('Retrieving', json_url)
#data = urllib.request.urlopen(json_url, context = ctx).read().decode()
#js = json.loads(data)

#print(json.dumps(js, indent = 4))

#location = js['results'][0]['place_id']
#print('place_id:', location)
